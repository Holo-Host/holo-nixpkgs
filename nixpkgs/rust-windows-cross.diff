diff --git a/pkgs/build-support/rust/default.nix b/pkgs/build-support/rust/default.nix
index 762a61b8a57..2dd436af007 100644
--- a/pkgs/build-support/rust/default.nix
+++ b/pkgs/build-support/rust/default.nix
@@ -1,4 +1,4 @@
-{ stdenv, cacert, git, cargo, rustc, fetchcargo, buildPackages }:
+{ stdenv, cacert, git, cargo, rustc, fetchcargo, buildPackages, windows }:
 
 { name ? "${args.pname}-${args.version}"
 , cargoSha256 ? "unset"
@@ -40,19 +40,24 @@ let
       cargoDepsCopy="$sourceRoot/${cargoVendorDir}"
     '';
 
+  nixConfig = stdenv.hostPlatform.config;
+  rustConfig = {
+    "x86_64-pc-mingw32" = "x86_64-pc-windows-gnu";
+  }."${nixConfig}" or nixConfig;
+
   ccForBuild="${buildPackages.stdenv.cc}/bin/${buildPackages.stdenv.cc.targetPrefix}cc";
   cxxForBuild="${buildPackages.stdenv.cc}/bin/${buildPackages.stdenv.cc.targetPrefix}c++";
   ccForHost="${stdenv.cc}/bin/${stdenv.cc.targetPrefix}cc";
   cxxForHost="${stdenv.cc}/bin/${stdenv.cc.targetPrefix}c++";
-  releaseDir = "target/${stdenv.hostPlatform.config}/${buildType}";
+  releaseDir = "target/${rustConfig}/${buildType}";
 
 in stdenv.mkDerivation (args // {
   inherit cargoDeps;
 
   patchRegistryDeps = ./patch-registry-deps;
 
-  nativeBuildInputs = [ cargo rustc git cacert ] ++ nativeBuildInputs;
-  inherit buildInputs;
+  nativeBuildInputs = nativeBuildInputs ++ [ cacert git cargo rustc ];
+  buildInputs = buildInputs ++ stdenv.lib.optional (nixConfig == "x86_64-pc-mingw32") windows.pthreads;
 
   patches = cargoPatches ++ patches;
 
@@ -84,7 +89,7 @@ in stdenv.mkDerivation (args // {
     [target."${stdenv.buildPlatform.config}"]
     "linker" = "${ccForBuild}"
     ${stdenv.lib.optionalString (stdenv.buildPlatform.config != stdenv.hostPlatform.config) ''
-    [target."${stdenv.hostPlatform.config}"]
+    [target."${rustConfig}"]
     "linker" = "${ccForHost}"
     ''}
     EOF
@@ -104,7 +109,7 @@ in stdenv.mkDerivation (args // {
       "CXX_${stdenv.hostPlatform.config}"="${cxxForHost}" \
       cargo build \
         --${buildType} \
-        --target ${stdenv.hostPlatform.config} \
+        --target ${rustConfig} \
         --frozen ${concatStringsSep " " cargoBuildFlags}
     )
 
